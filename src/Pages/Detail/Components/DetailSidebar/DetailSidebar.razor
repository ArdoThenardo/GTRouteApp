@using GTRouteApp.Helpers
@namespace GTRouteApp.Components.Detail

<div class="sidebar-container">
    <button class="back-button" type="button" @onclick="() => GoBack()">
        <span class="bi bi-arrow-left-square"></span>
    </button>

    <div class="sidebar-logo">
        <img class="img-cover" src="@CoverUrl" alt="cover" />
        <img class="img-logo" src="@LogoUrl" alt="logo" />
    </div>

    <button class="sidebar-button" 
        type="button"
        disabled="@((SelectedSubDetail == SubDetail.General) ? true : false)" 
        @onclick="() => ChangeSubDetail(SubDetail.General)">
        <span class="bi bi-card-heading"></span> 
        <span class="button-menu-name">@DetailSidebarMenu.General</span>
    </button>

    <button class="sidebar-button" 
        type="button"
        disabled="@((SelectedSubDetail == SubDetail.Layout) ? true : false)" 
        @onclick="() => ChangeSubDetail(SubDetail.Layout)">
        <span class="bi bi-sign-turn-slight-right-fill"></span> 
        <span class="button-menu-name">@DetailSidebarMenu.Layout</span>
    </button>

    @if (CanShowVideoMenu)
    {
        <button class="sidebar-button" 
            type="button"
            disabled="@((SelectedSubDetail == SubDetail.Video) ? true : false)" 
            @onclick="() => ChangeSubDetail(SubDetail.Video)">
            <span class="bi bi-collection-play-fill"></span> 
            <span class="button-menu-name">@DetailSidebarMenu.Showcase</span>
        </button>
    }
    
    <button class="sidebar-button" 
        type="button"
        disabled="@((SelectedSubDetail == SubDetail.Image) ? true : false)"  
        @onclick="() => ChangeSubDetail(SubDetail.Image)">
        <span class="bi bi-images"></span> 
        <span class="button-menu-name">@DetailSidebarMenu.Gallery</span>
    </button>
</div>

@code {
    [Parameter]
    public EventCallback<SubDetail> OnSubDetailChanged { get; set; }

    [Parameter]
    public EventCallback OnBackClicked { get; set; }

    [Parameter]
    public SubDetail SelectedSubDetail { get; set; } = SubDetail.General;

    [Parameter]
    public bool CanShowVideoMenu { get; set; } = true;

    [Parameter]
    public string CoverUrl { get; set; } = "";

    [Parameter]
    public string LogoUrl { get; set; } = "";

    private async Task GoBack()
    {
        await OnBackClicked.InvokeAsync();
    }

    private async Task ChangeSubDetail(SubDetail subDetail)
    {
        await OnSubDetailChanged.InvokeAsync(subDetail);
    }
}