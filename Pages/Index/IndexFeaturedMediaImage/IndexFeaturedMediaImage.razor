@using GTRouteApp.Models
@namespace GTRouteApp.HomeComponents
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<div class="media-container">
    <div class="media-inner-container">
        @foreach (var media in Media)
        {
            <div class="media-item">
                <div class="image-section">
                    <div class="image-placeholder">
                        <div class="image-shimmer"></div>
                        <span class="bi bi-image"></span>
                    </div>
                    <img src="@media.ImageUrl" 
                        alt="@media.ImageName">
                    <div class="track-information-container">
                        <div class="track-logo-and-name">
                            <img src="@media.LogoUrl" 
                                alt="@media.TrackName" />
                            <div class="track-name">
                                <a 
                                    class="clickable-text"
                                    href="@media.TrackUrl">
                                    @media.TrackName
                                </a>
                                <div class="track-country-and-category">
                                    <p><span class="fi fi-@media.Country.code"></span></p>
                                    <p>@media.Category</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <button type="button" 
                        title="View Track Detail"
                        class="btn btn-secondary media-btn"
                        @onclick="() => AccessTrackDetail(media.Slug!)">
                        <span class="bi bi-geo-alt-fill"></span>
                    </button>
                    <button type="button" 
                        title="See Image in Full Screen"
                        class="btn btn-secondary media-btn"
                        @onclick="() => OpenImageInFullScreen(media.ImageUrl)">
                        <span class="bi bi-arrows-fullscreen"></span>
                    </button>
                    <div class="image-info-section">
                        <div class="image-info-part-1">
                            <p>@media.Description</p>
                        </div>
                        <div class="image-info-part-2">
                            <p>
                                <span class="bi bi-camera-fill"></span> by @media.Author
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public List<FeaturedImage> Media { get; set; } = new();

    protected override void OnParametersSet()
    {
        foreach (var media in Media)
        {
            media.TrackUrl = $"/browse/detail/{media.Slug}?origin=home";
        }
    }

    private void AccessTrackDetail(string slug)
    {
        NavigationManager.NavigateTo($"/browse/detail/{slug}?origin=home");
    }

    private async Task OpenImageInFullScreen(string? url)
    {
        if (url is not null)
            await JS.InvokeVoidAsync("open", url, "_blank");
    }
}