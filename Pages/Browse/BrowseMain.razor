@page "/browse"
@using GTRouteApp.Data
@inject RaceTrackService RaceTrackService

<PageTitle>Browse | GTRoad</PageTitle>

@if (tracks == null || tracks.Count == 0)
{   
    <NoDataView Message="@errorMessage" ShowError="@showError" OnTryAgainClicked="OnTryAgainHandler" />
}
else
{
    <BrowseSubheader Info="@info" ChosenBrowseMode="@ChangeBrowseMode" preselect_mode="@preselect_mode" />

    @if (_mode == BrowseMode.Gallery)
    {
        <BrowseGallery Tracks="@tracks" />
    }
    else if (_mode == BrowseMode.Grid)
    {
        <BrowseGrid Tracks="@tracks" />
    }
}

@code {
    private List<RaceTrack> tracks = new();

    private const string galleryInfo = "Click or tap a track on the bottom to highlight";
    private const string gridInfo = "Click or tap a track to view";

    [Parameter]
    [SupplyParameterFromQuery(Name = "preselect_mode")]
    public string preselect_mode { get; set; } = ""; // gallery or grid
    private BrowseMode _mode = BrowseMode.Gallery;
    private string info = galleryInfo;

    private string errorMessage = "";
    private bool showError = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();

        PreselectBrowseMode();
    }

    private async Task LoadData()
    {
        await LoadTracks();
        CheckError();
    }

    private async Task LoadTracks()
    {
        tracks = await RaceTrackService.GetTracks();
    }

    private void CheckError()
    {
        errorMessage = RaceTrackService.GetRecentErrorMessage();
        showError = string.IsNullOrWhiteSpace(errorMessage) ? false : true;
    }

    private void PreselectBrowseMode()
    {
        if (!string.IsNullOrWhiteSpace(preselect_mode))
        {
            if (preselect_mode.Equals("gallery"))
            {
                ChangeBrowseMode(BrowseMode.Gallery);
            }
            else if (preselect_mode.Equals("grid"))
            {
                ChangeBrowseMode(BrowseMode.Grid);
            }
        }
    }

    private void ChangeBrowseMode(BrowseMode mode)
    {
        this._mode = mode;

        if (this._mode == BrowseMode.Gallery)
        {
            info = galleryInfo;
        }
        else if (this._mode == BrowseMode.Grid)
        {
            info = gridInfo;
        }
    }

    private async Task OnTryAgainHandler()
    {
        showError = false;

        await LoadData();
    }
}