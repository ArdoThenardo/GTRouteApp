@using GTRouteApp.Data
@inject RaceTrackService RaceTrackService

<div class="gallery-container">
    @if (tracks == null || tracks.Count == 0)
    {
        <p>Loading...</p>
    }
    else
    {
        <div class="gallery-highlight" style="background-image: url('@tracks.ElementAt(selectedIndex).CoverUrl');">
            <div class="highlight-section-1">
                <p><span class="bi bi-geo-alt-fill"></span> @tracks.ElementAt(selectedIndex).Country</p>
                <img
                    src="@tracks.ElementAt(selectedIndex).LogoUrl"
                    alt="@tracks.ElementAt(selectedIndex).LogoUrl"
                />
            </div>
            <div class="highlight-section-2">
                <div class="section-2-left">
                    <p>Road Type</p>
                    <p><span>@tracks.ElementAt(selectedIndex).RoadType</span></p>
                    <p>No. Of Layouts</p>
                    <p><span>@tracks.ElementAt(selectedIndex).NumberOfLayouts</span></p>
                </div>
                <button type="button" class="btn btn-secondary">View</button>
            </div>
        </div>
        <div class="gallery-selection">
            @foreach(var track in tracks.Select((trackData, index) => (trackData, index)))
            {
                @if (selectedIndex == track.index)
                {
                    <div class="gallery-item-selected">
                        <img
                            src="@track.trackData.LogoUrl"
                            alt="@track.trackData.LogoUrl"
                        />
                        <p>@track.trackData.Name</p>
                    </div>
                }
                else
                {
                    <div class="gallery-item" @onclick="() => SetSelection(track.index)">
                        <img
                            src="@track.trackData.LogoUrl"
                            alt="@track.trackData.LogoUrl"
                        />
                        <p>@track.trackData.Name</p>
                    </div>
                }
            }
        </div>
    }
</div>

@code {
    private List<RaceTrack> tracks = new();
    private int selectedIndex = 0;

    protected override async Task OnInitializedAsync()
    {
        await LoadTracks();
    }

    private async Task LoadTracks()
    {
        tracks = await RaceTrackService.GetTracks();
    }

    private void SetSelection(int index)
    {
        selectedIndex = index;
    }
}