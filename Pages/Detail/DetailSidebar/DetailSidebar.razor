@using GTRouteApp.Helpers
@namespace GTRouteApp.DetailComponents

<div class="sidebar-container">
    <div class="back-button" type="button" @onclick="() => GoBack()">
        <span class="bi bi-arrow-left-square"></span>
    </div>

    <div class="sidebar-logo">
        <img class="img-cover" src="@CoverUrl" alt="cover" />
        <img class="img-logo" src="@LogoUrl" alt="logo" />
    </div>

    @if (SelectedSubDetail == SubDetail.General)
    {
        <button class="sidebar-button" type="button" disabled>
            <span class="bi bi-clipboard2-fill"></span> 
            <span class="button-menu-name">@DetailSidebarMenu.General</span>
        </button>
    }
    else
    {
        <button class="sidebar-button" type="button" @onclick="() => ChangeSubDetail(SubDetail.General)">
            <span class="bi bi-clipboard2-fill"></span> 
            <span class="button-menu-name">@DetailSidebarMenu.General</span>
        </button>
    }

    @if (SelectedSubDetail == SubDetail.Layout)
    {
        <button class="sidebar-button" type="button" disabled>
            <span class="bi bi-sign-turn-slight-right-fill"></span> 
            <span class="button-menu-name">@DetailSidebarMenu.Layout</span>
        </button>
    }
    else
    {
        <button class="sidebar-button" type="button" @onclick="() => ChangeSubDetail(SubDetail.Layout)">
            <span class="bi bi-sign-turn-slight-right-fill"></span> 
            <span class="button-menu-name">@DetailSidebarMenu.Layout</span>
        </button>
    }

    @if (SelectedSubDetail == SubDetail.Video)
    {
        <button class="sidebar-button" type="button" disabled>
            <span class="bi bi-collection-play-fill"></span> 
            <span class="button-menu-name">@DetailSidebarMenu.Showcase</span>
        </button>
    }
    else
    {
        @if (ShowVideoMenu)
        {
            <button class="sidebar-button" type="button" @onclick="() => ChangeSubDetail(SubDetail.Video)">
                <span class="bi bi-collection-play-fill"></span> 
                <span class="button-menu-name">@DetailSidebarMenu.Showcase</span>
            </button>
        }
    }
    
    @if (SelectedSubDetail == SubDetail.Image)
    {
        <button class="sidebar-button" type="button" disabled>
            <span class="bi bi-images"></span> 
            <span class="button-menu-name">@DetailSidebarMenu.Gallery</span>
        </button>
    }
    else
    {
        <button class="sidebar-button" type="button" @onclick="() => ChangeSubDetail(SubDetail.Image)">
            <span class="bi bi-images"></span> 
            <span class="button-menu-name">@DetailSidebarMenu.Gallery</span>
        </button>
    }
</div>

@code {
    [Parameter]
    public EventCallback<SubDetail> OnSubDetailChanged { get; set; }

    [Parameter]
    public EventCallback OnBackClicked { get; set; }

    [Parameter]
    public SubDetail SelectedSubDetail { get; set; } = SubDetail.General;

    [Parameter]
    public bool ShowVideoMenu { get; set; } = true;

    [Parameter]
    public string CoverUrl { get; set; } = "";

    [Parameter]
    public string LogoUrl { get; set; } = "";

    private async Task GoBack()
    {
        await OnBackClicked.InvokeAsync();
    }

    private async Task ChangeSubDetail(SubDetail subDetail)
    {
        await OnSubDetailChanged.InvokeAsync(subDetail);
    }
}