@using GTRouteApp.Models
@namespace GTRouteApp.DetailComponents

<div class="detail-player-container">
    <div class="player-side-sub-container">
        <div class="detail-player-row-1">
            <button type="button" 
                class="btn btn-secondary" 
                @onclick="() => BackToVideoSelection()">
                <span class="bi bi-arrow-left-square"></span> Back to Selection
            </button>
        </div>

        <div class="detail-player-row-2">
            <div class="player-column">
                <div class="detail-player">
                    <BlazoredVideo 
                        style="width: inherit;
                            box-shadow: 1px 1px 16px rgba(30, 32, 34, 0.6);" 
                        controls="controls">
                        <source src="@Video.VideoUrl" />
                    </BlazoredVideo>
                </div>
            </div>

            <div class="information-column">
                <span>@Video.VideoType</span>
                <p>@Video.VideoName</p>
                <p>
                    <span class="bi bi-person-fill"></span> @Video.Author
                </p>
                <p>
                    <span class="bi bi-card-text"></span> @Video.Description
                </p>
            </div>
        </div>
    </div>

    <div class="related-side-sub-container">
        <div class="related-header">
            <span><i class="bi bi-film"></i> Related Video&#40;s&#41;</span>
        </div>

        <div class="related-videos">
            <!-- using currently selected video as example for temporary -->
            <div class="related-video-item">
                <div class="related-thumbnail-area">
                    <img alt="@Video.VideoName" src="@Video.ThumbnailUrl" />
                    <span class="bi bi-play-circle"></span>
                </div>

                <div class="related-info-area">
                    <span>@Video.VideoType</span>
                    <p>@Video.VideoName</p>
                    <p>
                        <span class="bi bi-person-fill"></span>
                        @Video.Author
                    </p>
                </div>
            </div>

            
            <div class="related-video-item">
                <div class="related-thumbnail-area">
                    <img alt="@Video.VideoName" src="@Video.ThumbnailUrl" />
                    <span class="bi bi-play-circle"></span>
                </div>

                <div class="related-info-area">
                    <span>@Video.VideoType</span>
                    <p>@Video.VideoName</p>
                    <p>
                        <span class="bi bi-person-fill"></span>
                        @Video.Author
                    </p>
                </div>
            </div>
            <!-- using currently selected video as example for temporary -->
        </div>
    </div>
</div>

@code {
    [Parameter]
    public TrackVideo Video { get; set; } = new();

    [Parameter]
    public EventCallback OnBackClicked { get; set; }

    private async Task BackToVideoSelection()
    {
        await OnBackClicked.InvokeAsync();
    }
}