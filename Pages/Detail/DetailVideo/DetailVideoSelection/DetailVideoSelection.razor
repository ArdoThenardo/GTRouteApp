@using GTRouteApp.Models
@using GTRouteApp.Helpers
@namespace GTRouteApp.DetailComponents

<div class="detail-showcase-container">
    <div class="showcase-group-1">
        <p class="detail-track-name">
            <span class="bi bi-geo-alt-fill" style="margin-right: 6px"></span>@TrackName
        </p>
    </div>
    <div class="showcase-group-2">
        @if (Videos.Count() < 1)
        {
            <DetailNoData Text="video" />
        }
        
        @foreach (var video in Videos)
        {
            <article class="video-item" @onclick="() => OpenPlayer(video)">
                <div class="item-thumbnail">
                    <img src="@video.ThumbnailUrl" alt="@video.VideoName">
                    <span><i class="bi bi-stopwatch"></i> @TimeConverters.ConvertSecondsToMinutes(video.DurationInSeconds ?? 0)</span>
                    <span>@video.VideoType</span>
                    <span class="bi bi-play-circle"></span>
                </div>
                <div class="item-properties property-row-1">
                    <p>@video.VideoName</p>
                </div>
                <div class="item-properties property-row-2">
                    <p>
                        <span class="bi bi-person-fill"></span>
                        @video.Author
                    </p>
                </div>
                <div class="item-properties property-row-3">
                    <p>@video.Description</p>
                </div>
            </article>
        }
    </div>
</div>

@code {
    [Parameter]
    public string TrackName { get; set; } = "";

    [Parameter]
    public List<TrackVideo> Videos { get; set; } = new();

    [Parameter]
    public EventCallback<TrackVideo> OnVideoItemClicked { get; set; }

    private async Task OpenPlayer(TrackVideo video)
    {
        await OnVideoItemClicked.InvokeAsync(video);
    }
}